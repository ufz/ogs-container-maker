stages:
  - build
  - release
  - deploy

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  BUILDKIT_PROGRESS: "plain"
# cache:
#   paths:
#     - .cache/pip
#     - .venv/

dev images:
  tags: ['docker-shell']
  stage: build
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH
  script:
    - black --check ogscm
    - poetry install
    - poetry run ogscm compiler.py ogs.py -B -C --sif_file ubuntu-dev.sif --pm system --ogs off
    - poetry run ogscm compiler.py ogs.py -B -C --sif_file centos-dev.sif --base_image centos:8 --pm system --ogs off
  artifacts:
    # example URL:
    # https://gitlab.opengeosys.org/ogs/container-maker/-/jobs/artifacts/master/raw/_out/images/ubuntu-dev.sif?job=dev+images
    paths:
      - _out/images/*.sif

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo 'Running release job.'
  release:
    tag_name: '$CI_COMMIT_TAG'
    description: 'Created using the GitLab release-cli.'

publish:
  tags: ['docker-shell']
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - poetry install
    - poetry build
    - poetry publish -u $PYPI_USERNAME -p $PYPI_PASSWORD
